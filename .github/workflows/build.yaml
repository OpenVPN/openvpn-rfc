# The name of our workflow
name: Build
on: [push, pull_request]

jobs:
  build:
    name: "build"
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout RFC
      uses: actions/checkout@v5
    - name: Install dependencies
      run: sudo apt update && sudo apt install -y make python3-pip libxml2-dev libxslt1-dev libyaml-dev
    - name: Install pipenv
      run: pip3 install pipenv
    - name: Create pipenv
      run: pipenv install -d
    - name: build html
      run: pipenv run make openvpn-wire-protocol.html
    - name: build txt
      run: pipenv run make openvpn-wire-protocol.txt
    - name: Archive html artifact
      uses: actions/upload-artifact@v4
      with:
        name: openvpn-wire-protocol.html
        path: openvpn-wire-protocol.html
    - name: Archive txt artifact
      uses: actions/upload-artifact@v4
      with:
        name: openvpn-wire-protocol.txt
        path: openvpn-wire-protocol.txt
    - name: Prepare Pages
      id: build
      if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/master' }}
      run: |
        mkdir pages
        cp openvpn-wire-protocol.* pages/
        touch pages/.nojekyll
    - name: Upload static files as artifact
      id: deployment
      if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/master' }}
      uses: actions/upload-pages-artifact@v4.0.0
      with:
        path: pages/

  deploy:
    needs: build
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-24.04
    if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/master' }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5
